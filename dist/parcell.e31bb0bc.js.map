{"version":3,"sources":["medicalInstitution/Person.js","medicalInstitution/Doctor.js","medicalInstitution/Patient.js","medicalInstitution/BloodSugarExam.js","medicalInstitution/BloodPressureExam.js","medicalInstitution/BloodCholesterolExam.js","medicalInstitution/AppointmentRecord.js","medicalInstitution/AppointmentSchedule.js","index.js"],"names":["Person","firstName","lastName","_firstName","_lastName","Doctor","specialty","patients","patient","push","Patient","ID","medicalNumber","doctor","choosenDoctor","BloodSugarExam","lastMealTime","Date","getTime","sugarLevel","Math","floor","random","BloodPressureExam","pulse","upperValue","lowerValue","BloodCholesterolExam","cholesterolLevel","AppointmentRecord","schedule","exam","type","execute","AppointmentSchedule","scheduledDate","scheduledTime","milan","console","log","dragan","chooseTheDoctor","addPatient","appointment1","now","appointment2","record1","returnResults","record2"],"mappings":";;AQAA;;AACA;;AACA,IPFMK,ACAAK;AIAN,ALEC,ACAA,kBDAYT,CCAAA,QDAZ,CCAA,CDAuBC,CCAAA,ODAvB,CCAA,CDAiCI,CCAAK,EAAjC,EAAqCC,IDArC,EAA4C,OCA5C,EAAoD;AMCrD,APD6C,ACAQ;AIDrD,INDMZ,SAEL,gBAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AQElC,APDE,ACAA,AFDgC,SCC3BD,ACAAA,SDAL,ACAA,GDAiBA,ACAAA,SDAjB,ACAA;AIDF,ALEE,ACAA,SDAKC,ACAAA,QDAL,ACAA,GDAgBA,ACAAA,QDAhB,ACAA;AMGF,APFE,ACAA,AFFA,CQID,MRJMC,ECEAG,ACAAK,EAAL,EMEU,CNFAA,EAAV,CFFA,CCEA,EDFkBV,CCEDK,QDFjB,CCEA;AOID,APHC,ACAA,AFFA,IOJI4B,AFAAP,ADAAJ,ADAAR,EKSDsB,CRLEjC,ECEAG,ACAAK,EMGG,GAAG,ERLX,CCEA,COGeP,CRLEH,CCED,EAAhB,ACAA,GAAqBU,EFFrB,KQKW,CAAW,KNHtB,EMGW,EAAoB,YAApB,EAAkC,kBAAlC,CAAZ;AACA0B,ADRA,AFAA,ADAA,ADAA,AFKC,ACAA,AFFA,EQKDA,OAAO,CAACC,GAAR,aAAiB,ELRH,EKQOtB,CDRTJ,AHAE,GIQG,AHRH,EGQd,CDRA,EAAoBL,OAApB,EAA6BwB,IAA7B,EAAmCG,aAAnC,EAAkDC,aAAlD,EAAiE;ACUjE,ADViE,AFAnD,ADAA,ADAA,MKUVI,MAAM,GAAG,IAAI9B,gBAAJ,CAAY,QAAZ,EAAsB,YAAtB,EAAmC,aAAnC,EAAkD,EAAlD,CAAb;AACA4B,EAAAA,OAAO,CAACC,GAAR,aAAiB,IAAItB,IAAJ,EAAjB;AAEAuB,ADZC,AFAA,ADAA,ADAA,EKYDA,MAAM,CAACC,ADZDT,AFAAhB,ADAAQ,ADAAR,IIAL,CHAA,EGAYgB,CHACZ,GGAb,CFAA,ADAiB,ADAjB,CCAkBC,EIYnB,AHZqBJ,AFAAA,CKYEoB,EJZT,CCAW,ADACjB,ADAD,CEACF,AFAAA,CKY1B,EJZ8B,CAACI,GCAV,AFAA,EEApB,AFAA,CCAyB,KAAgB,GAAjB,GAAwB,CAAnC,CAAb;AIaDgB,ADZC,AFAA,ADAA,ADAA,EKYDA,OAAO,ADZDzB,AFAAe,ADAAH,ADAAN,CKYEoB,GAAR,EDZC,GAAc1B,CHAd,ADAA,GCAkBO,ADAAA,EIAlB,CFAA,CGYgB,AJZM,ADAA,CCACC,ADAAA,CEACD,EGYJH,CPPVT,CILkB,ADAV,ADAA,CEAWa,ADACD,ADAAA,CKYd,EAAjB,ANPgBP,CELmB,ADAA,CEAV,ADAWS,ADAAA,CEACF,CJKjB,GILqB,CAACE,ADAX,ADAA,ADKP,KELuB,ADAA,CEAV,CFAP,CCAA,EDAuB,CEAA,ADAC,ADAnC,CCAA,ADAlB,CEAmC,ADAnC,GCA0D,CAAlC,CAAxB;AGaDe,ADZC,AFAA,ADAA,ADAA,AFKA,ACAA,EMODA,EFbKR,GEaA,CAACa,CDZAlC,AHAAkB,EHKAnB,ACAAO,KKLL,ECYD,CAAiB0B,ADZDhC,AHAf,AHKA,CAAcC,EGLIW,EHKlB,ACAA,CMOD,APPoBZ,CMLnB,AHAsB,CAACa,AFKFR,KELH,AHKlB,CGL8BO,AFK9B,IELkC,CAACE,MAAL,KAAgB,GAAjB,GAAwB,CAAnC,CAAlB;AIcD,AFbA,ACAC,AHAA,AHKA,ACAA,MMQGqB,APPJ,GMNMR,SCaU,GAAG,CDblB,GCasBD,ADbDC,IDAVL,QAAZ,CCAC,CDAqB,0BEaH,CAAwB,aAAxB,EAAuCO,KAAvC,EAA8CG,MAA9C,EAAsD,IAAIvB,IAAJ,EAAtD,EAAgE,IAAIA,IAAI,CAAC2B,GAAT,EAAhE,CAAnB;AACAN,AFdsB,ACCrB,ECaDA,OAAO,ADbDF,CCaEG,GAAR,CAAYI,QDbX,GAAqBP,CCaE,CAACN,QAAb,EAAZ,CDbC;ACcD,ADbC,MCaGe,YAAY,GAAG,IAAIX,wCAAJ,CAAwB,gBAAxB,EAA0CG,KAA1C,EAAiDG,MAAjD,EAAyD,IAAIvB,IAAJ,EAAzD,EAAmE,IAAIA,IAAI,CAAC2B,GAAT,EAAnE,CAAnB;AACAN,AFfC,EEeDA,OAAO,AFfDR,CEeES,GAAR,CAAYM,GFfX,GAAgBf,MEeO,CAACA,CFfxB,EDAS,AFAA,KKeE,EAAZ;AAEA,AFhBC,ADAA,AFAA,MKgBGgB,OAAO,GAAG,IAAIjB,UJhBR,sBDA8B,IKgB1B,CAAsBc,ALhBSxB,CEAC,KAAKS,IFAlD,EKgBa,CAAd,SHhBC,IFA4D,KAAKZ,OEAO,KAAKA,AFA7E,YEAA;AGiBDsB,AHhBC,ADAA,ADAA,EKgBDA,OAAO,CAACC,GAAR,aAAiB,IAAItB,IAAJ,EAAjB,gBAA+B6B,GJhBY,IIgBL,CAACC,AJhBStB,UAA/C,GIgB8B,EAA/B,WJhBgE,KAAKC,UAApE,eAAmF,KAAKF,KAAxF;AIiBD,AJhBC,MIgBGwB,OAAO,GAAG,IAAInB,WDhBP,yBCgBG,CAAsBgB,YAAtB,CAAd;AACAP,ADhBC,ECgBDA,OAAO,CAACC,GAAR,cAAkB,IAAItB,IAAJ,CDhBM,CCgBxB,IDhB6Be,IAA5B,QCgB+BgB,OAAO,CAACD,IDhBG,KAAKvC,ICgBhB,EAAhC,CDhB2C,CAAaP,SAAvD,wDAA8G,KAAKY,MAAL,CAAYZ,SAA1H,iBAA0I,KAAKkC,aAA/I,iBAAmK,KAAKC,aAAxK;ACkBD,ADjBC,CCLF,mCFGiB;AACf,UAAIL,IAAJ;;AAEA,cAAO,KAAKD,QAAL,CAAcE,IAArB;AACC,aAAK,gBAAL;AACCD,UAAAA,IAAI,GAAG,IAAIR,oCAAJ,EAAP;AACA;;AACD,aAAK,mBAAL;AACCQ,UAAAA,IAAI,GAAG,IAAIJ,0CAAJ,EAAP;AACA;;AACD,aAAK,aAAL;AACCI,UAAAA,IAAI,GAAG,IAAIhB,8BAAJ,EAAP;AACA;;AACD;AACCgB,UAAAA,IAAI,GAAG,IAAIR,oCAAJ,EAAP;AACA;AAZF;;AAeA,4BAAe,KAAKO,QAAL,CAAcE,IAA7B,wCAA+D,KAAKF,QAAL,CAActB,OAAd,CAAsBP,SAArF,mBAAuG,KAAK8B,IAAL,CAAUE,OAAV,EAAvG;AAEA","file":"parcell.e31bb0bc.js","sourceRoot":"..","sourcesContent":["class Person {\r\n\r\n\tconstructor(firstName, lastName) {\r\n\t\tthis._firstName = firstName;\r\n\t\tthis._lastName = lastName;\r\n\t}\r\n}\r\n\r\nexport { Person }","class Doctor {\r\n\t\r\n\tconstructor(firstName, lastName, specialty) {\r\n\t\tthis.firstName = firstName;\r\n\t\tthis.lastName = lastName;\r\n\t\tthis.specialty = specialty;\r\n\t\tthis.patients = [];\r\n\t}\r\n\r\n\taddPatient(patient) {\r\n\t\tthis.patients.push(patient);\r\n\t}\r\n\t//promis za kad ga izabere pacijent\r\n}","class Patient{\r\n\r\n\tconstructor(firstName, lastName, ID, medicalNumber) {\r\n\t\tthis.firstName = firstName;\r\n\t\tthis.lastName = lastName;\r\n\t\tthis.ID = ID;\r\n\t\tthis.medicalNumber = medicalNumber;\r\n\t}\r\n\r\n\tchooseTheDoctor(doctor) {\r\n\t\tthis.choosenDoctor = doctor;\r\n\t}\r\n\r\n}","class BloodSugarExam{\r\n\r\n\tconstructor() {\r\n\t\tthis.lastMealTime = Date.getTime();\r\n\t\tthis.sugarLevel = Math.floor((Math.random() * 10) + 1);\r\n\t}\r\n\r\n\texecute() {\r\n\t\treturn `Results for blood sugar are: ${this.sugarLevel} , ${this.lastMealTime}.`;\r\n\t}\r\n\r\n}\r\nexport { BloodSugarExam }","class BloodPressureExam{\r\n\r\n\tconstructor() {\r\n\t\tthis.pulse = Math.floor((Math.random() * 150) + 1);\r\n\t\tthis.upperValue = Math.floor((Math.random() * 200) + 1);\r\n\t\tthis.lowerValue = Math.floor((Math.random() * 100) + 1);\r\n\t}\r\n\r\n\texecute() {\r\n\t\treturn `Results for blood pressure are: ${this.upperValue} , ${this.lowerValue}, ${this.pulse}.`;\r\n\t}\r\n\r\n}\r\nexport { BloodPressureExam }","class BloodCholesterolExam{\r\n\r\n\tconstructor() {\r\n\t\tthis.lastMealTime = Date.getTime();\r\n\t\tthis.cholesterolLevel = Math.floor((Math.random() * 10) + 1);\r\n\t}\r\n\r\n\texecute() {\r\n\t\treturn `Results for blood cholesterol are: ${this.cholesterolLevel} , ${this.lastMealTime}.`;\r\n\t}\r\n\r\n}\r\nexport { BloodCholesterolExam }","import { BloodSugarExam } from './BloodSugarExam.js';\r\nimport { BloodPressureExam } from './BloodPressureExam.js';\r\nimport { BloodCholesterolExam } from './BloodCholesterolExam.js';\r\n\r\nclass AppointmentRecord {\r\n\r\n\tconstructor(schedule) {\r\n\t\tthis.schedule = schedule;\r\n\t}\r\n\r\n\treturnResults() {\r\n\t\tvar exam;\r\n\r\n\t\tswitch(this.schedule.type) {\r\n\t\t\tcase 'blood pressure':\r\n\t\t\t\texam = new BloodPressureExam();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blood cholesterol':\r\n\t\t\t\texam = new BloodCholesterolExam();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blood sugar':\r\n\t\t\t\texam = new BloodSugarExam();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\texam = new BloodPressureExam();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t\treturn `Exam ${this.schedule.type} has been done for patient ${this.schedule.patient.firstName}, and ${this.exam.execute()}`;\r\n\r\n\t}\r\n\r\n}\r\nexport { AppointmentRecord }","class AppointmentSchedule {\r\n\r\n\tconstructor(doctor, patient, type, scheduledDate, scheduledTime) {\r\n\t\tthis.type = type;\r\n\t\tthis.doctor = doctor;\r\n\t\tthis.patient = patient;\r\n\t\tthis.scheduledDate = scheduledDate;\r\n\t\tthis.scheduledTime = scheduledTime;\r\n\t}\r\n\r\n\tschedule() {\r\n\t\treturn ` Appointment ${this.type},  for ${this.patient.firstName} has been successfully scheduled by doctor ${this.doctor.firstName} on ${this.scheduledDate} in ${this.scheduledTime} `;\r\n\t}\r\n}\r\nexport { AppointmentSchedule }","import { Person }  from './medicalInstitution/Person.js';\r\nimport { Doctor }  from './medicalInstitution/Doctor.js';\r\nimport { Patient }  from './medicalInstitution/Patient.js';\r\nimport { AppointmentRecord } from './medicalInstitution/AppointmentRecord.js';\r\nimport { AppointmentSchedule } from './medicalInstitution/AppointmentSchedule.js';\r\n\r\n\r\n(function() {\r\n\r\n\tvar milan = new Doctor(\"Milan\", \"Doktorovic\", \"Gastroenternolog\");\r\n\tconsole.log(`[ ${new Date} ] kreiran doktor Milan`);\r\n\r\n\tvar dragan = new Patient(\"Dragan\", \"Pacijentic\",1234567891234, 36);\r\n\tconsole.log(`[ ${new Date} ] kreiran pacijent Dragan`);\r\n\r\n\tdragan.chooseTheDoctor(milan);\r\n\tconsole.log(`[ ${new Date} ] pacijent izabrao doktora`);\r\n\tmilan.addPatient(dragan);\r\n\r\n\tlet appointment1 = new AppointmentSchedule(\"blood sugar\", milan, dragan, new Date, new Date.now());\r\n\tconsole.log(appointment1.schedule());\r\n\tlet appointment2 = new AppointmentSchedule(\"blood pressure\", milan, dragan, new Date, new Date.now());\r\n\tconsole.log(appointment2.schedule());\r\n\r\n\tlet record1 = new AppointmentRecord(appointment1);\r\n\tconsole.log(`[ ${new Date} ] ${record1.returnResults()} pregled 1 izvrsen `);\r\n\tlet record2 = new AppointmentRecord(appointment2);\r\n\tconsole.log(` [ ${new Date} ] ${record2.returnResults()} pregled 2 izvrsen `);\r\n\r\n})();"]}